{
  "openapi": "3.0.1",
  "info": {
    "title": "Compasso SaaS API Reference",
    "description": "Welcome to the Compasso API Documentation, your comprehensive guide to detailed insights into our API endpoints, authentication methods, data structures, and best practices to streamline your development process.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/sessions": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Authenticate the user",
        "requestBody": {
          "description": "Authenticates the user and returns an access token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Session response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [],
        "type": "object",
        "properties": {
          "id": {
            "description": "Uuid for the user",
            "type": "string",
            "format": "int64"
          },
          "name": {
            "description": "The user name",
            "type": "string"
          },
          "email": {
            "description": "The user e-mail",
            "type": "string"
          },
          "image": {
            "description": "The user avatar",
            "type": "integer"
          },
          "email_verified_at": {
            "description": "The time that the user has verified its email",
            "type": "string"
          },
          "is_two_factor_enabled": {
            "description": "If the user has enabled the 2FA",
            "type": "integer"
          },
          "is_team_created": {
            "description": "If the user has already created a team",
            "type": "integer"
          },
          "is_stripe_connected": {
            "description": "If the user has connected with Stripe for invoicing",
            "type": "integer"
          },
          "subscription": {
            "description": "The type the user is subscribed: free, pro",
            "type": "string"
          },
          "flag_type": {
            "description": "The flag the user is on: default, beta",
            "type": "string"
          },
          "access_token": {
            "description": "The user access token",
            "type": "string"
          },
          "created_at": {
            "description": "The time the user has authenticated",
            "type": "string"
          }
        }
      },
      "AuthenticateUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "required": ["name", "password"],
            "type": "object",
            "properties": {
              "email": {
                "description": "The user e-mail",
                "type": "string"
              },
              "password": {
                "description": "The user password (min 6)",
                "type": "string"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
