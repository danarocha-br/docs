{
  "openapi": "3.0.1",
  "info": {
    "title": "Compasso SaaS API Reference",
    "description": "Welcome to the Compasso API Documentation, your comprehensive guide to integrating Compasso's powerful management solutions into your freelance workflow. This documentation provides detailed insights into our API endpoints, authentication methods, data structures, and best practices to streamline your development process.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.compasso.team"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/user": {
      "get": {
        "description": "Return the user profile",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/sessions": {
      "post": {
        "description": "Authenticates a user and returns an access token along with user details.",
        "requestBody": {
          "description": "Credentials required to authenticate the user.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password, minimum 6 characters."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Authentication successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "id",
          "email"
        ],
        "properties": {
          "id": {
            "description": "Unique identifier for the user.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "The user's name.",
            "type": "string"
          },
          "email": {
            "description": "The user's email address.",
            "type": "string",
            "format": "email"
          },
          "image": {
            "description": "The user's avatar.",
            "type": "string"
          },
          "email_verified_at": {
            "description": "The time that the user verified their email.",
            "type": "string",
            "format": "date-time"
          },
          "is_two_factor_enabled": {
            "description": "Indicates whether the user has enabled two-factor authentication.",
            "type": "boolean"
          },
          "is_team_created": {
            "description": "Indicates whether the user has already created a team.",
            "type": "boolean"
          },
          "is_stripe_connected": {
            "description": "Indicates whether the user has connected with Stripe for invoicing.",
            "type": "boolean"
          },
          "subscription": {
            "description": "The subscription tier of the user: free, pro, etc.",
            "type": "string"
          },
          "flag_type": {
            "description": "The flag the user is on: default, beta, etc.",
            "type": "string"
          },
          "access_token": {
            "description": "JWT access token for the session.",
            "type": "string"
          },
          "created_at": {
            "description": "The time the user authenticated.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Error message describing what went wrong."
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
